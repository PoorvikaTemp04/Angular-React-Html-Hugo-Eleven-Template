{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport reorder, { reorderQuoteMap } from \"./core/taskboard/reorder\";\nimport Column from \"./core/taskboard/Column\";\nimport fetch from \"../lib/fetch\";\nimport useSWR from \"swr\";\nimport { useState } from \"react\";\n\nvar Taskboard = function Taskboard() {\n  var _useSWR = useSWR(\"\".concat(process.env.baseUrl, \"api/taskboard\"), fetch),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", null, \"Failed to load data\");\n  if (!data) return __jsx(\"div\", null, \"Loading...\");\n  return __jsx(TaskboardInner, {\n    data: data\n  });\n};\n\nvar TaskboardInner = function TaskboardInner(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(data),\n      columns = _useState[0],\n      setColumn = _useState[1];\n\n  var _useState2 = useState(_Object$keys(columns)),\n      ordered = _useState2[0],\n      setOrder = _useState2[1];\n\n  var onDragEnd = function onDragEnd(result) {\n    if (!result.destination) return;\n    var source = result.source;\n    var destination = result.destination;\n\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n\n    if (result.type === \"COLUMN\") {\n      var _ordered = reorder(_ordered, source.index, destination.index);\n\n      setOrder(_ordered);\n      return;\n    }\n\n    var data = reorderQuoteMap({\n      quoteMap: columns,\n      source: source,\n      destination: destination\n    });\n    setColumn(data.quoteMap);\n  };\n\n  return __jsx(\"div\", {\n    className: \"app-taskboard\"\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd\n  }, __jsx(Droppable, {\n    droppableId: \"taskboard\",\n    type: \"COLUMN\"\n  }, function (provided) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      className: \"h-100\"\n    }), ordered.map(function (key, index) {\n      return __jsx(Column, {\n        key: key,\n        index: index,\n        title: key,\n        tasks: columns[key]\n      });\n    }));\n  })));\n};\n\nexport default Taskboard;","map":null,"metadata":{},"sourceType":"module"}