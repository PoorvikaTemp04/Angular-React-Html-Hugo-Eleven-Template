{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, Label, Input, FormGroup, Form } from 'reactstrap';\n\nvar ModalFocusAfterClose =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalFocusAfterClose, _React$Component);\n\n  function ModalFocusAfterClose() {\n    var _this;\n\n    _classCallCheck(this, ModalFocusAfterClose);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalFocusAfterClose).call(this));\n    _this.state = {\n      open: false,\n      focusAfterClose: true\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModalFocusAfterClose, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(_ref2) {\n      var value = _ref2.target.value;\n      this.setState({\n        focusAfterClose: JSON.parse(value)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Form, {\n        inline: true,\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        }\n      }, __jsx(FormGroup, null, __jsx(Label, {\n        for: \"focusAfterClose\"\n      }, \"Focus After Close\"), __jsx(Input, {\n        className: \"mx-2\",\n        type: \"select\",\n        id: \"focusAfterClose\",\n        onChange: this.handleSelectChange\n      }, __jsx(\"option\", {\n        value: \"true\"\n      }, \"Yes\"), __jsx(\"option\", {\n        value: \"false\"\n      }, \"No\"))), __jsx(Button, {\n        color: \"danger\",\n        onClick: this.toggle\n      }, \"Open\")), __jsx(Modal, {\n        returnFocusAfterClose: this.state.focusAfterClose,\n        isOpen: this.state.open\n      }, __jsx(ModalBody, null, \"Observe the \\\"Open\\\" button. It will be focused after close when \\\"returnFocusAfterClose\\\" is true and will not be focused if \\\"returnFocusAfterClose\\\" is false.\"), __jsx(ModalFooter, null, __jsx(Button, {\n        color: \"primary\",\n        onClick: this.toggle\n      }, \"Close\"))));\n    }\n  }]);\n\n  return ModalFocusAfterClose;\n}(React.Component);\n\nexport default ModalFocusAfterClose;","map":null,"metadata":{},"sourceType":"module"}