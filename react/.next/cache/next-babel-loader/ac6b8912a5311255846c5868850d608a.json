{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Carousel, CarouselIndicators, CarouselItem } from \"reactstrap\";\nimport { useState } from \"react\";\n\nvar TaskItem = function TaskItem(_ref) {\n  var task = _ref.task,\n      provided = _ref.provided;\n\n  var _useState = useState(0),\n      activeIndex = _useState[0],\n      setActiveIndex = _useState[1];\n\n  var _useState2 = useState(false),\n      animating = _useState2[0],\n      setAnimating = _useState2[1];\n\n  var next = function next() {\n    if (animating) return;\n    var nextIndex = activeIndex === task.images.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var previous = function previous() {\n    if (animating) return;\n    var nextIndex = activeIndex === 0 ? task.images.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var goToIndex = function goToIndex(newIndex) {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  return __jsx(\"div\", _extends({\n    className: \"app-taskboard-task \".concat(task.color ? task.color : \"\"),\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps), __jsx(\"div\", {\n    className: \"p-2\"\n  }, __jsx(\"p\", {\n    className: \"mb-0\"\n  }, task.title), __jsx(\"small\", {\n    className: \"text-muted d-block \".concat(task.images ? \"mb-2\" : \"\")\n  }, task.description), task.images && __jsx(\"div\", {\n    className: \"cover\",\n    style: {\n      height: 150\n    }\n  }, __jsx(Carousel, {\n    activeIndex: activeIndex,\n    next: next,\n    previous: previous,\n    className: \"overflow-hidden\"\n  }, task.images.map(function (image, index) {\n    return __jsx(CarouselItem, {\n      onExiting: function onExiting() {\n        return setAnimating(true);\n      },\n      onExited: function onExited() {\n        return setAnimating(false);\n      },\n      key: index\n    }, __jsx(\"div\", {\n      key: index,\n      className: \"image\",\n      style: {\n        backgroundImage: \"url(\".concat(image, \")\"),\n        height: 150\n      }\n    }));\n  }), __jsx(CarouselIndicators, {\n    items: task.images,\n    activeIndex: activeIndex,\n    onClickHandler: goToIndex\n  })))));\n};\n\nexport default TaskItem;","map":null,"metadata":{},"sourceType":"module"}