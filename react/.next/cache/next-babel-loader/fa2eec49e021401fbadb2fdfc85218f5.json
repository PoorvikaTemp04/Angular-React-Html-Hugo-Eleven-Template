{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap';\nvar items = [{\n  id: 1,\n  altText: 'Slide 1',\n  caption: 'Slide 1'\n}, {\n  id: 2,\n  altText: 'Slide 2',\n  caption: 'Slide 2'\n}, {\n  id: 3,\n  altText: 'Slide 3',\n  caption: 'Slide 3'\n}];\n\nvar Example =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Example, _Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.state = {\n      activeIndex: 0\n    };\n    _this.next = _this.next.bind(_assertThisInitialized(_this));\n    _this.previous = _this.previous.bind(_assertThisInitialized(_this));\n    _this.goToIndex = _this.goToIndex.bind(_assertThisInitialized(_this));\n    _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_this));\n    _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"onExiting\",\n    value: function onExiting() {\n      this.animating = true;\n    }\n  }, {\n    key: \"onExited\",\n    value: function onExited() {\n      this.animating = false;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.animating) return;\n      var nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      if (this.animating) return;\n      var nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    }\n  }, {\n    key: \"goToIndex\",\n    value: function goToIndex(newIndex) {\n      if (this.animating) return;\n      this.setState({\n        activeIndex: newIndex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeIndex = this.state.activeIndex;\n      var slides = items.map(function (item) {\n        return __jsx(CarouselItem, {\n          className: \"custom-tag\",\n          tag: \"div\",\n          key: item.id,\n          onExiting: _this2.onExiting,\n          onExited: _this2.onExited\n        }, __jsx(CarouselCaption, {\n          className: \"text-danger\",\n          captionText: item.caption,\n          captionHeader: item.caption\n        }));\n      });\n      return __jsx(\"div\", null, __jsx(\"style\", null, \".custom-tag {\\n                max-width: 100%;\\n                height: 500px;\\n                background: black;\\n              }\"), __jsx(Carousel, {\n        activeIndex: activeIndex,\n        next: this.next,\n        previous: this.previous\n      }, __jsx(CarouselIndicators, {\n        items: items,\n        activeIndex: activeIndex,\n        onClickHandler: this.goToIndex\n      }), slides, __jsx(CarouselControl, {\n        direction: \"prev\",\n        directionText: \"Previous\",\n        onClickHandler: this.previous\n      }), __jsx(CarouselControl, {\n        direction: \"next\",\n        directionText: \"Next\",\n        onClickHandler: this.next\n      })));\n    }\n  }]);\n\n  return Example;\n}(Component);\n\nexport default Example;","map":null,"metadata":{},"sourceType":"module"}