{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport fetch from \"isomorphic-unfetch\";\nexport default function _callee() {\n  var res,\n      result,\n      _args = arguments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch.apply(void 0, _args));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          result = _context.sent;\n\n          if (!(res.status !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(result.error);\n\n        case 8:\n          return _context.abrupt(\"return\", result);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}