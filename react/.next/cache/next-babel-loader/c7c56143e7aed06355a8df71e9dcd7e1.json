{"ast":null,"code":"import { useEffect, useRef, useState } from \"react\";\nexport default function useHover() {\n  var ref = useRef();\n\n  var _useState = useState(false),\n      hovered = _useState[0],\n      setHovered = _useState[1];\n\n  var enter = function enter() {\n    return setHovered(true);\n  };\n\n  var leave = function leave() {\n    return setHovered(false);\n  };\n\n  useEffect(function () {\n    ref.current.addEventListener(\"mouseenter\", enter);\n    ref.current.addEventListener(\"mouseleave\", leave);\n    return function () {\n      ref.current.removeEventListener(\"mouseenter\", enter);\n      ref.current.removeEventListener(\"mouseleave\", leave);\n    };\n  }, [ref]);\n  return [ref, hovered];\n}","map":{"version":3,"sources":["F:/Ashwin_templates_react/eleven-multi-purpose-bootstrap-admin-template-2022-02-21-23-52-22-utc/eleven-multi-purpose-bootstrap-admin-template-2022-02-21-23-52-22-utc/react/components/core/UseHover.js"],"names":["useEffect","useRef","useState","useHover","ref","hovered","setHovered","enter","leave","current","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,MAAMC,GAAG,GAAGH,MAAM,EAAlB;;AADiC,kBAGHC,QAAQ,CAAC,KAAD,CAHL;AAAA,MAG1BG,OAH0B;AAAA,MAGjBC,UAHiB;;AAKjC,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAd;;AACA,MAAME,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMF,UAAU,CAAC,KAAD,CAAhB;AAAA,GAAd;;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,GAAG,CAACK,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CH,KAA3C;AACAH,IAAAA,GAAG,CAACK,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CF,KAA3C;AACA,WAAO,YAAM;AACXJ,MAAAA,GAAG,CAACK,OAAJ,CAAYE,mBAAZ,CAAgC,YAAhC,EAA8CJ,KAA9C;AACAH,MAAAA,GAAG,CAACK,OAAJ,CAAYE,mBAAZ,CAAgC,YAAhC,EAA8CH,KAA9C;AACD,KAHD;AAID,GAPQ,EAON,CAACJ,GAAD,CAPM,CAAT;AASA,SAAO,CAACA,GAAD,EAAMC,OAAN,CAAP;AACD","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport default function useHover() {\n  const ref = useRef();\n\n  const [hovered, setHovered] = useState(false);\n\n  const enter = () => setHovered(true);\n  const leave = () => setHovered(false);\n\n  useEffect(() => {\n    ref.current.addEventListener(\"mouseenter\", enter);\n    ref.current.addEventListener(\"mouseleave\", leave);\n    return () => {\n      ref.current.removeEventListener(\"mouseenter\", enter);\n      ref.current.removeEventListener(\"mouseleave\", leave);\n    };\n  }, [ref]);\n\n  return [ref, hovered];\n}\n"]},"metadata":{},"sourceType":"module"}