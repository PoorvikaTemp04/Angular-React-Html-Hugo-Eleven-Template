{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport { Tooltip } from 'reactstrap';\nimport classNames from 'classnames';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tooltipOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        tooltipOpen: !this.state.tooltipOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = 'tooltip-inner';\n      return __jsx(\"div\", null, __jsx(\"p\", null, \"Somewhere in here is a\", ' ', __jsx(\"span\", {\n        style: {\n          textDecoration: 'underline',\n          color: 'blue'\n        },\n        href: \"#\",\n        id: \"TooltipExample\"\n      }, \"tooltip\"), \".\"), __jsx(Tooltip, {\n        placement: \"right\",\n        isOpen: this.state.tooltipOpen,\n        target: \"TooltipExample\",\n        toggle: this.toggle\n      }, \"Hello world!\"));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":null,"metadata":{},"sourceType":"module"}