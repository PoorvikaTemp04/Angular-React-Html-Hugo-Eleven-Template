{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar ModalExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalExample, _React$Component);\n\n  function ModalExample(props) {\n    var _this;\n\n    _classCallCheck(this, ModalExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalExample).call(this, props));\n    _this.state = {\n      modal: false,\n      nestedModal: false,\n      closeAll: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.toggleNested = _this.toggleNested.bind(_assertThisInitialized(_this));\n    _this.toggleAll = _this.toggleAll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModalExample, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"toggleNested\",\n    value: function toggleNested() {\n      this.setState({\n        nestedModal: !this.state.nestedModal,\n        closeAll: false\n      });\n    }\n  }, {\n    key: \"toggleAll\",\n    value: function toggleAll() {\n      this.setState({\n        nestedModal: !this.state.nestedModal,\n        closeAll: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Button, {\n        color: \"danger\",\n        onClick: this.toggle\n      }, this.props.buttonLabel), __jsx(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className\n      }, __jsx(ModalHeader, {\n        toggle: this.toggle\n      }, \"Modal title\"), __jsx(ModalBody, null, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\", __jsx(\"br\", null), __jsx(Button, {\n        color: \"success\",\n        onClick: this.toggleNested\n      }, \"Show Nested Modal\"), __jsx(Modal, {\n        isOpen: this.state.nestedModal,\n        toggle: this.toggleNested,\n        onClosed: this.state.closeAll ? this.toggle : undefined\n      }, __jsx(ModalHeader, null, \"Nested Modal title\"), __jsx(ModalBody, null, \"Stuff and things\"), __jsx(ModalFooter, null, __jsx(Button, {\n        color: \"primary\",\n        onClick: this.toggleNested\n      }, \"Done\"), ' ', __jsx(Button, {\n        color: \"secondary\",\n        onClick: this.toggleAll\n      }, \"All Done\")))), __jsx(ModalFooter, null, __jsx(Button, {\n        color: \"primary\",\n        onClick: this.toggle\n      }, \"Do Something\"), ' ', __jsx(Button, {\n        color: \"secondary\",\n        onClick: this.toggle\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return ModalExample;\n}(React.Component);\n\nexport default ModalExample;","map":null,"metadata":{},"sourceType":"module"}