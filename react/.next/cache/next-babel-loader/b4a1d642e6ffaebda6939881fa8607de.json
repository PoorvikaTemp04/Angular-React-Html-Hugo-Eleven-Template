{"ast":null,"code":"var _jsxFileName = \"F:\\\\Ashwin_templates_react\\\\eleven-multi-purpose-bootstrap-admin-template-2022-02-21-23-52-22-utc\\\\eleven-multi-purpose-bootstrap-admin-template-2022-02-21-23-52-22-utc\\\\react\\\\components\\\\core\\\\Sidebar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from \"prop-types\";\nimport { useRef } from \"react\";\n\nvar Sidebar = function Sidebar(_ref) {\n  var open = _ref.open,\n      width = _ref.width,\n      onSetOpen = _ref.onSetOpen,\n      sidebar = _ref.sidebar,\n      children = _ref.children,\n      isMobile = _ref.isMobile,\n      rootClass = _ref.rootClass,\n      sidebarClass = _ref.sidebarClass,\n      contentClass = _ref.contentClass;\n  var sidebarRef = useRef();\n\n  var overlayClicked = function overlayClicked() {\n    if (open) {\n      onSetOpen(false);\n    }\n  };\n\n  var isOverlayVisibile = open && isMobile;\n  return __jsx(\"div\", {\n    className: \"position-relative d-flex flex-row flex-fill \".concat(rootClass),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"sidebar bg-dark \".concat(sidebarClass),\n    ref: sidebarRef,\n    style: {\n      transform: open ? \"translateX(0)\" : \"translateX(-100%)\",\n      minWidth: \"\".concat(width, \"px\"),\n      maxWidth: \"\".concat(width, \"px\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, sidebar), __jsx(\"div\", {\n    className: \"page-overlay\",\n    onClick: overlayClicked,\n    style: {\n      visibility: isOverlayVisibile ? \"visible\" : \"hidden\",\n      opacity: isOverlayVisibile ? \"1\" : \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"position-relative d-flex flex-column flex-fill \".concat(contentClass),\n    style: {\n      minWidth: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, children));\n};\n\nSidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func\n};\nSidebar.defaultProps = {\n  open: false,\n  onSetOpen: function onSetOpen() {}\n};\nexport default Sidebar;","map":{"version":3,"sources":["F:/Ashwin_templates_react/eleven-multi-purpose-bootstrap-admin-template-2022-02-21-23-52-22-utc/eleven-multi-purpose-bootstrap-admin-template-2022-02-21-23-52-22-utc/react/components/core/Sidebar.js"],"names":["PropTypes","useRef","Sidebar","open","width","onSetOpen","sidebar","children","isMobile","rootClass","sidebarClass","contentClass","sidebarRef","overlayClicked","isOverlayVisibile","transform","minWidth","maxWidth","visibility","opacity","propTypes","node","isRequired","bool","func","defaultProps"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,OAAvB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAUV;AAAA,MATJC,IASI,QATJA,IASI;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,YACI,QADJA,YACI;AACJ,MAAMC,UAAU,GAAGX,MAAM,EAAzB;;AACA,MAAMY,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIV,IAAJ,EAAU;AACRE,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GAJD;;AAKA,MAAMS,iBAAiB,GAAGX,IAAI,IAAIK,QAAlC;AAEA,SACE;AAAK,IAAA,SAAS,wDAAiDC,SAAjD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,4BAAqBC,YAArB,CADX;AAEE,IAAA,GAAG,EAAEE,UAFP;AAGE,IAAA,KAAK,EAAE;AACLG,MAAAA,SAAS,EAAEZ,IAAI,GAAG,eAAH,GAAqB,mBAD/B;AAELa,MAAAA,QAAQ,YAAKZ,KAAL,OAFH;AAGLa,MAAAA,QAAQ,YAAKb,KAAL;AAHH,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGE,OATH,CADF,EAYE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,OAAO,EAAEO,cAFX;AAGE,IAAA,KAAK,EAAE;AACLK,MAAAA,UAAU,EAAEJ,iBAAiB,GAAG,SAAH,GAAe,QADvC;AAELK,MAAAA,OAAO,EAAEL,iBAAiB,GAAG,GAAH,GAAS;AAF9B,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAoBE;AACE,IAAA,SAAS,2DAAoDH,YAApD,CADX;AAEE,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGT,QAJH,CApBF,CADF;AA6BD,CAhDD;;AAkDAL,OAAO,CAACkB,SAAR,GAAoB;AAClB;AACAb,EAAAA,QAAQ,EAAEP,SAAS,CAACqB,IAAV,CAAeC,UAFP;AAIlB;AACAhB,EAAAA,OAAO,EAAEN,SAAS,CAACqB,IAAV,CAAeC,UALN;AAOlB;AACAnB,EAAAA,IAAI,EAAEH,SAAS,CAACuB,IARE;AAUlB;AACAlB,EAAAA,SAAS,EAAEL,SAAS,CAACwB;AAXH,CAApB;AAcAtB,OAAO,CAACuB,YAAR,GAAuB;AACrBtB,EAAAA,IAAI,EAAE,KADe;AAErBE,EAAAA,SAAS,EAAE,qBAAM,CAAE;AAFE,CAAvB;AAKA,eAAeH,OAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport { useRef } from \"react\";\n\nconst Sidebar = ({\n  open,\n  width,\n  onSetOpen,\n  sidebar,\n  children,\n  isMobile,\n  rootClass,\n  sidebarClass,\n  contentClass\n}) => {\n  const sidebarRef = useRef();\n  const overlayClicked = () => {\n    if (open) {\n      onSetOpen(false);\n    }\n  };\n  const isOverlayVisibile = open && isMobile;\n\n  return (\n    <div className={`position-relative d-flex flex-row flex-fill ${rootClass}`}>\n      <div\n        className={`sidebar bg-dark ${sidebarClass}`}\n        ref={sidebarRef}\n        style={{\n          transform: open ? \"translateX(0)\" : \"translateX(-100%)\",\n          minWidth: `${width}px`,\n          maxWidth: `${width}px`\n        }}\n      >\n        {sidebar}\n      </div>\n      <div\n        className=\"page-overlay\"\n        onClick={overlayClicked}\n        style={{\n          visibility: isOverlayVisibile ? \"visible\" : \"hidden\",\n          opacity: isOverlayVisibile ? \"1\" : \"0\"\n        }}\n      />\n      <div\n        className={`position-relative d-flex flex-column flex-fill ${contentClass}`}\n        style={{ minWidth: 0 }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func\n};\n\nSidebar.defaultProps = {\n  open: false,\n  onSetOpen: () => {}\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}